//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29373293
// Cuda compilation tools, release 11.2, V11.2.67
// Based on NVVM 7.0.1
//

.version 7.2
.target sm_61
.address_size 64

	// .globl	__intersection__cylinder
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 params[256];
.global .align 1 .b8 $str[36] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 0};
.global .align 1 .b8 $str$1[42] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str$2[46] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str$3[51] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 84, 82, 65, 86, 69, 82, 83, 65, 66, 76, 69, 0};
.global .align 1 .b8 $str$4[48] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 77, 73, 83, 83, 95, 83, 66, 84, 0};
.global .align 1 .b8 $str$5[47] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 72, 73, 84, 95, 83, 66, 84, 0};
.const .align 8 .u64 exceptions[12] = {4294967295, generic($str), 4294967294, generic($str$1), 4294967293, generic($str$2), 4294967291, generic($str$3), 4294967290, generic($str$4), 4294967289, generic($str$5)};
.global .align 1 .b8 $str$6[24] = {79, 112, 116, 105, 120, 32, 69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 37, 117, 58, 32, 37, 115, 10, 0};

.visible .entry __intersection__cylinder()
{
	.reg .pred 	%p<34>;
	.reg .b16 	%rs<8>;
	.reg .f32 	%f<90>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<4>;


	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd3, [%rd2+8];
	// begin inline asm
	call (%f17), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f20), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f21), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f22), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f23), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f24), _optix_get_world_ray_direction_z, ();
	// end inline asm
	add.s64 	%rd1, %rd3, 208;
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd3+208];
	ld.f32 	%f33, [%rd3+160];
	fma.rn.f32 	%f34, %f19, %f33, %f26;
	ld.f32 	%f35, [%rd3+164];
	fma.rn.f32 	%f36, %f19, %f35, %f27;
	ld.f32 	%f37, [%rd3+168];
	fma.rn.f32 	%f38, %f19, %f37, %f28;
	ld.f32 	%f39, [%rd3+176];
	fma.rn.f32 	%f40, %f20, %f39, %f34;
	ld.f32 	%f41, [%rd3+180];
	fma.rn.f32 	%f42, %f20, %f41, %f36;
	ld.f32 	%f43, [%rd3+184];
	fma.rn.f32 	%f44, %f20, %f43, %f38;
	ld.f32 	%f45, [%rd3+192];
	fma.rn.f32 	%f46, %f21, %f45, %f40;
	ld.f32 	%f47, [%rd3+196];
	fma.rn.f32 	%f48, %f21, %f47, %f42;
	ld.f32 	%f49, [%rd3+200];
	fma.rn.f32 	%f3, %f21, %f49, %f44;
	ld.v4.f32 	{%f50, %f51, %f52, %f53}, [%rd3+160];
	mul.f32 	%f57, %f22, %f50;
	mul.f32 	%f58, %f22, %f51;
	mul.f32 	%f59, %f22, %f52;
	fma.rn.f32 	%f60, %f23, %f39, %f57;
	fma.rn.f32 	%f61, %f23, %f41, %f58;
	fma.rn.f32 	%f62, %f23, %f43, %f59;
	fma.rn.f32 	%f63, %f24, %f45, %f60;
	fma.rn.f32 	%f64, %f24, %f47, %f61;
	fma.rn.f32 	%f4, %f24, %f49, %f62;
	mul.f32 	%f65, %f64, %f64;
	fma.rn.f32 	%f5, %f63, %f63, %f65;
	mul.f32 	%f66, %f48, %f64;
	fma.rn.f32 	%f67, %f46, %f63, %f66;
	add.f32 	%f6, %f67, %f67;
	mul.f32 	%f68, %f48, %f48;
	fma.rn.f32 	%f69, %f46, %f46, %f68;
	ld.f32 	%f70, [%rd3+292];
	mul.f32 	%f71, %f70, %f70;
	sub.f32 	%f7, %f69, %f71;
	setp.eq.f32 	%p3, %f5, 0f00000000;
	setp.le.f32 	%p4, %f6, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.pred 	%p33, 0;
	@%p5 bra 	LBB0_3;

	neg.f32 	%f72, %f7;
	div.rn.f32 	%f87, %f72, %f6;
	mul.f32 	%f73, %f5, 0fC0800000;
	mul.f32 	%f74, %f73, %f7;
	fma.rn.f32 	%f9, %f6, %f6, %f74;
	setp.neu.f32 	%p7, %f5, 0f00000000;
	setp.lt.f32 	%p8, %f9, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	mov.f32 	%f88, %f87;
	@%p9 bra 	LBB0_3;

	mov.b32 	%r1, %f6;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f75, %f9;
	mov.b32 	%r3, %f75;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f76, %r5;
	add.f32 	%f77, %f6, %f76;
	mul.f32 	%f78, %f77, 0fBF000000;
	div.rn.f32 	%f79, %f78, %f5;
	div.rn.f32 	%f80, %f7, %f78;
	min.f32 	%f81, %f79, %f80;
	max.f32 	%f82, %f79, %f80;
	selp.f32 	%f10, %f87, %f81, %p3;
	selp.f32 	%f88, %f87, %f82, %p3;
	mov.pred 	%p33, -1;
	mov.f32 	%f87, %f10;

LBB0_3:
	fma.rn.f32 	%f14, %f4, %f87, %f3;
	fma.rn.f32 	%f15, %f4, %f88, %f3;
	setp.ge.f32 	%p12, %f88, %f17;
	setp.le.f32 	%p13, %f87, %f18;
	and.pred  	%p14, %p13, %p12;
	and.pred  	%p15, %p33, %p14;
	setp.leu.f32 	%p16, %f88, %f18;
	setp.geu.f32 	%p17, %f87, %f17;
	or.pred  	%p18, %p17, %p16;
	and.pred  	%p19, %p18, %p15;
	mov.u16 	%rs3, 0;
	not.pred 	%p20, %p19;
	mov.u16 	%rs7, %rs3;
	@%p20 bra 	LBB0_9;

	setp.ltu.f32 	%p21, %f14, 0f00000000;
	@%p21 bra 	LBB0_6;

	ld.f32 	%f83, [%rd1+80];
	setp.le.f32 	%p22, %f14, %f83;
	setp.ge.f32 	%p23, %f87, %f17;
	and.pred  	%p24, %p23, %p22;
	mov.u16 	%rs7, 1;
	@%p24 bra 	LBB0_9;

LBB0_6:
	setp.ltu.f32 	%p25, %f15, 0f00000000;
	mov.u16 	%rs7, %rs3;
	@%p25 bra 	LBB0_9;

	ld.f32 	%f84, [%rd1+80];
	setp.gtu.f32 	%p26, %f15, %f84;
	mov.u16 	%rs7, %rs3;
	@%p26 bra 	LBB0_9;

	setp.le.f32 	%p27, %f88, %f18;
	selp.u16 	%rs7, 1, 0, %p27;

LBB0_9:
	setp.ltu.f32 	%p28, %f14, 0f00000000;
	@%p28 bra 	LBB0_11;

	ld.f32 	%f85, [%rd1+80];
	setp.le.f32 	%p29, %f14, %f85;
	setp.ge.f32 	%p30, %f87, %f17;
	and.pred  	%p31, %p30, %p29;
	@%p31 bra 	LBB0_12;

LBB0_11:
	mov.f32 	%f87, %f88;

LBB0_12:
	setp.eq.s16 	%p32, %rs7, 0;
	@%p32 bra 	LBB0_14;

	mov.u32 	%r7, 254;
	// begin inline asm
	call (%r6), _optix_report_intersection_0, (%f87, %r7);
	// end inline asm

LBB0_14:
	ret;

}
	// .globl	__closesthit__cylinder
.visible .entry __closesthit__cylinder()
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<168>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<75>;


	// begin inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	@%p1 bra 	LBB1_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32 	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	LBB1_12;

LBB1_2:
	// begin inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd9, [%rd8+8];
	// begin inline asm
	call (%f39), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f40), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f41), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f42), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f43), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f44), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f45), _optix_get_ray_tmax, ();
	// end inline asm
	fma.rn.f32 	%f165, %f45, %f42, %f39;
	fma.rn.f32 	%f166, %f45, %f43, %f40;
	fma.rn.f32 	%f167, %f45, %f44, %f41;
	add.s64 	%rd3, %rd9, 208;
	ld.v4.f32 	{%f46, %f47, %f48, %f49}, [%rd9+208];
	ld.f32 	%f53, [%rd9+160];
	fma.rn.f32 	%f54, %f165, %f53, %f46;
	ld.f32 	%f55, [%rd9+164];
	fma.rn.f32 	%f56, %f165, %f55, %f47;
	ld.f32 	%f57, [%rd9+168];
	fma.rn.f32 	%f58, %f165, %f57, %f48;
	ld.f32 	%f59, [%rd9+176];
	fma.rn.f32 	%f60, %f166, %f59, %f54;
	ld.f32 	%f61, [%rd9+180];
	fma.rn.f32 	%f62, %f166, %f61, %f56;
	ld.f32 	%f63, [%rd9+184];
	fma.rn.f32 	%f64, %f166, %f63, %f58;
	ld.f32 	%f65, [%rd9+192];
	fma.rn.f32 	%f5, %f167, %f65, %f60;
	ld.f32 	%f66, [%rd9+196];
	fma.rn.f32 	%f6, %f167, %f66, %f62;
	ld.f32 	%f67, [%rd9+200];
	fma.rn.f32 	%f7, %f167, %f67, %f64;
	abs.f32 	%f8, %f5;
	abs.f32 	%f9, %f6;
	setp.eq.f32 	%p2, %f8, 0f00000000;
	setp.eq.f32 	%p3, %f9, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	mov.b32 	%r2, %f5;
	mov.b32 	%r11, %f6;
	and.b32  	%r3, %r11, -2147483648;
	@%p4 bra 	LBB1_6;
	bra.uni 	LBB1_3;

LBB1_6:
	shr.s32 	%r16, %r2, 31;
	and.b32  	%r17, %r16, 1078530011;
	or.b32  	%r18, %r17, %r3;
	mov.b32 	%f155, %r18;
	bra.uni 	LBB1_7;

LBB1_3:
	setp.eq.f32 	%p5, %f8, 0f7F800000;
	setp.eq.f32 	%p6, %f9, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB1_5;
	bra.uni 	LBB1_4;

LBB1_5:
	setp.lt.s32 	%p11, %r2, 0;
	selp.b32 	%r14, 1075235812, 1061752795, %p11;
	or.b32  	%r15, %r14, %r3;
	mov.b32 	%f155, %r15;
	bra.uni 	LBB1_7;

LBB1_4:
	setp.lt.s32 	%p8, %r2, 0;
	min.f32 	%f68, %f9, %f8;
	max.f32 	%f69, %f9, %f8;
	div.rn.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f70, %f70;
	mov.f32 	%f72, 0fC0B59883;
	mov.f32 	%f73, 0fBF52C7EA;
	fma.rn.f32 	%f74, %f71, %f73, %f72;
	mov.f32 	%f75, 0fC0D21907;
	fma.rn.f32 	%f76, %f74, %f71, %f75;
	mul.f32 	%f77, %f71, %f76;
	mul.f32 	%f78, %f70, %f77;
	add.f32 	%f79, %f71, 0f41355DC0;
	mov.f32 	%f80, 0f41E6BD60;
	fma.rn.f32 	%f81, %f79, %f71, %f80;
	mov.f32 	%f82, 0f419D92C8;
	fma.rn.f32 	%f83, %f81, %f71, %f82;
	rcp.rn.f32 	%f84, %f83;
	fma.rn.f32 	%f85, %f78, %f84, %f70;
	mov.f32 	%f86, 0f3FC90FDB;
	sub.f32 	%f87, %f86, %f85;
	setp.gt.f32 	%p9, %f9, %f8;
	selp.f32 	%f88, %f87, %f85, %p9;
	mov.f32 	%f89, 0f40490FDB;
	sub.f32 	%f90, %f89, %f88;
	selp.f32 	%f91, %f90, %f88, %p8;
	mov.b32 	%r12, %f91;
	or.b32  	%r13, %r3, %r12;
	mov.b32 	%f92, %r13;
	add.f32 	%f93, %f8, %f9;
	setp.le.f32 	%p10, %f93, 0f7F800000;
	selp.f32 	%f155, %f92, %f93, %p10;

LBB1_7:
	ld.f32 	%f14, [%rd3+80];
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16 	%p12, %rs1, 0;
	@%p12 bra 	LBB1_9;

	mul.f32 	%f95, %f6, 0fC0C90FDB;
	ld.v4.f32 	{%f96, %f97, %f98, %f99}, [%rd3+-176];
	mul.f32 	%f103, %f95, %f96;
	mul.f32 	%f104, %f95, %f97;
	mul.f32 	%f105, %f95, %f98;
	ld.v4.f32 	{%f106, %f107, %f108, %f109}, [%rd3+-160];
	mul.f32 	%f113, %f5, 0f40C90FDB;
	fma.rn.f32 	%f114, %f113, %f106, %f103;
	fma.rn.f32 	%f115, %f113, %f107, %f104;
	fma.rn.f32 	%f116, %f113, %f108, %f105;
	ld.f32 	%f117, [%rd3+-144];
	mov.f32 	%f118, 0f00000000;
	fma.rn.f32 	%f159, %f118, %f117, %f114;
	ld.f32 	%f119, [%rd3+-140];
	fma.rn.f32 	%f160, %f118, %f119, %f115;
	ld.f32 	%f120, [%rd3+-136];
	fma.rn.f32 	%f161, %f118, %f120, %f116;
	mul.f32 	%f121, %f96, 0f00000000;
	mul.f32 	%f122, %f97, 0f00000000;
	mul.f32 	%f123, %f98, 0f00000000;
	fma.rn.f32 	%f124, %f118, %f106, %f121;
	fma.rn.f32 	%f125, %f118, %f107, %f122;
	fma.rn.f32 	%f126, %f118, %f108, %f123;
	fma.rn.f32 	%f156, %f14, %f117, %f124;
	fma.rn.f32 	%f157, %f14, %f119, %f125;
	fma.rn.f32 	%f158, %f14, %f120, %f126;
	mul.f32 	%f127, %f158, %f160;
	mul.f32 	%f128, %f161, %f157;
	sub.f32 	%f129, %f127, %f128;
	mul.f32 	%f130, %f161, %f156;
	mul.f32 	%f131, %f159, %f158;
	sub.f32 	%f132, %f130, %f131;
	mul.f32 	%f133, %f159, %f157;
	mul.f32 	%f134, %f160, %f156;
	sub.f32 	%f135, %f133, %f134;
	mul.f32 	%f136, %f129, %f129;
	fma.rn.f32 	%f137, %f132, %f132, %f136;
	fma.rn.f32 	%f138, %f135, %f135, %f137;
	sqrt.rn.f32 	%f139, %f138;
	div.rn.f32 	%f140, %f129, %f139;
	div.rn.f32 	%f141, %f132, %f139;
	div.rn.f32 	%f142, %f135, %f139;
	mul.f32 	%f143, %f5, %f5;
	fma.rn.f32 	%f144, %f6, %f6, %f143;
	sqrt.rn.f32 	%f145, %f144;
	ld.f32 	%f146, [%rd3+84];
	sub.f32 	%f147, %f146, %f145;
	fma.rn.f32 	%f165, %f140, %f147, %f165;
	fma.rn.f32 	%f166, %f141, %f147, %f166;
	fma.rn.f32 	%f167, %f142, %f147, %f167;
	ld.u8 	%rs3, [%rd3+88];
	setp.eq.s16 	%p13, %rs3, 0;
	neg.f32 	%f148, %f140;
	neg.f32 	%f149, %f141;
	neg.f32 	%f150, %f142;
	selp.f32 	%f162, %f140, %f148, %p13;
	selp.f32 	%f163, %f141, %f149, %p13;
	selp.f32 	%f164, %f142, %f150, %p13;

LBB1_9:
	ld.u64 	%rd10, [%rd8];
	// begin inline asm
	call (%r19), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.u64 	%rd11, [params+216];
	cvta.to.global.u64 	%rd12, %rd11;
	cvt.u64.u32 	%rd4, %r1;
	mul.wide.u32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u64 	[%rd14], %rd10;
	ld.const.u64 	%rd15, [params+224];
	cvta.to.global.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.u32 	[%rd18], %r19;
	ld.const.u64 	%rd19, [params+80];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd17;
	setp.lt.f32 	%p14, %f155, 0f00000000;
	cvt.f64.f32 	%fd1, %f155;
	add.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64 	%f151, %fd2;
	selp.f32 	%f152, %f151, %f155, %p14;
	cvt.f64.f32 	%fd3, %f152;
	div.rn.f64 	%fd4, %fd3, 0d401921FB54442D18;
	cvt.rn.f32.f64 	%f153, %fd4;
	st.global.f32 	[%rd21], %f153;
	ld.const.u64 	%rd22, [params+88];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd17;
	div.rn.f32 	%f154, %f7, %f14;
	st.global.f32 	[%rd24], %f154;
	ld.const.u64 	%rd25, [params+144];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd17;
	st.global.f32 	[%rd27], %f165;
	ld.const.u64 	%rd28, [params+152];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd17;
	st.global.f32 	[%rd30], %f166;
	ld.const.u64 	%rd31, [params+160];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd17;
	st.global.f32 	[%rd33], %f167;
	@%p12 bra 	LBB1_11;

	ld.const.u64 	%rd34, [params+96];
	cvta.to.global.u64 	%rd35, %rd34;
	shl.b64 	%rd36, %rd4, 2;
	add.s64 	%rd37, %rd35, %rd36;
	st.global.f32 	[%rd37], %f162;
	ld.const.u64 	%rd38, [params+104];
	cvta.to.global.u64 	%rd39, %rd38;
	add.s64 	%rd40, %rd39, %rd36;
	st.global.f32 	[%rd40], %f163;
	ld.const.u64 	%rd41, [params+112];
	cvta.to.global.u64 	%rd42, %rd41;
	add.s64 	%rd43, %rd42, %rd36;
	st.global.f32 	[%rd43], %f164;
	ld.const.u64 	%rd44, [params+120];
	cvta.to.global.u64 	%rd45, %rd44;
	add.s64 	%rd46, %rd45, %rd36;
	st.global.f32 	[%rd46], %f162;
	ld.const.u64 	%rd47, [params+128];
	cvta.to.global.u64 	%rd48, %rd47;
	add.s64 	%rd49, %rd48, %rd36;
	st.global.f32 	[%rd49], %f163;
	ld.const.u64 	%rd50, [params+136];
	cvta.to.global.u64 	%rd51, %rd50;
	add.s64 	%rd52, %rd51, %rd36;
	st.global.f32 	[%rd52], %f164;
	ld.const.u64 	%rd53, [params+168];
	cvta.to.global.u64 	%rd54, %rd53;
	add.s64 	%rd55, %rd54, %rd36;
	st.global.f32 	[%rd55], %f159;
	ld.const.u64 	%rd56, [params+176];
	cvta.to.global.u64 	%rd57, %rd56;
	add.s64 	%rd58, %rd57, %rd36;
	st.global.f32 	[%rd58], %f160;
	ld.const.u64 	%rd59, [params+184];
	cvta.to.global.u64 	%rd60, %rd59;
	add.s64 	%rd61, %rd60, %rd36;
	st.global.f32 	[%rd61], %f161;
	ld.const.u64 	%rd62, [params+192];
	cvta.to.global.u64 	%rd63, %rd62;
	add.s64 	%rd64, %rd63, %rd36;
	st.global.f32 	[%rd64], %f156;
	ld.const.u64 	%rd65, [params+200];
	cvta.to.global.u64 	%rd66, %rd65;
	add.s64 	%rd67, %rd66, %rd36;
	st.global.f32 	[%rd67], %f157;
	ld.const.u64 	%rd68, [params+208];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd70, %rd69, %rd36;
	st.global.f32 	[%rd70], %f158;

LBB1_11:
	ld.const.u64 	%rd71, [params+72];
	cvta.to.global.u64 	%rd72, %rd71;
	shl.b64 	%rd73, %rd4, 2;
	add.s64 	%rd74, %rd72, %rd73;
	st.global.f32 	[%rd74], %f45;

LBB1_12:
	ret;

}
	// .globl	__intersection__disk
.visible .entry __intersection__disk()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<3>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+8];
	// begin inline asm
	call (%f2), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f3), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f4), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f5), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f6), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f7), _optix_get_world_ray_direction_z, ();
	// end inline asm
	ld.v4.f32 	{%f8, %f9, %f10, %f11}, [%rd2+208];
	ld.f32 	%f15, [%rd2+160];
	fma.rn.f32 	%f16, %f2, %f15, %f8;
	ld.f32 	%f17, [%rd2+164];
	fma.rn.f32 	%f18, %f2, %f17, %f9;
	ld.f32 	%f19, [%rd2+168];
	fma.rn.f32 	%f20, %f2, %f19, %f10;
	ld.f32 	%f21, [%rd2+176];
	fma.rn.f32 	%f22, %f3, %f21, %f16;
	ld.f32 	%f23, [%rd2+180];
	fma.rn.f32 	%f24, %f3, %f23, %f18;
	ld.f32 	%f25, [%rd2+184];
	fma.rn.f32 	%f26, %f3, %f25, %f20;
	ld.f32 	%f27, [%rd2+192];
	fma.rn.f32 	%f28, %f4, %f27, %f22;
	ld.f32 	%f29, [%rd2+196];
	fma.rn.f32 	%f30, %f4, %f29, %f24;
	ld.f32 	%f31, [%rd2+200];
	fma.rn.f32 	%f32, %f4, %f31, %f26;
	ld.v4.f32 	{%f33, %f34, %f35, %f36}, [%rd2+160];
	mul.f32 	%f40, %f5, %f33;
	mul.f32 	%f41, %f5, %f34;
	mul.f32 	%f42, %f5, %f35;
	fma.rn.f32 	%f43, %f6, %f21, %f40;
	fma.rn.f32 	%f44, %f6, %f23, %f41;
	fma.rn.f32 	%f45, %f6, %f25, %f42;
	fma.rn.f32 	%f46, %f7, %f27, %f43;
	fma.rn.f32 	%f47, %f7, %f29, %f44;
	fma.rn.f32 	%f48, %f7, %f31, %f45;
	neg.f32 	%f49, %f32;
	div.rn.f32 	%f1, %f49, %f48;
	fma.rn.f32 	%f50, %f1, %f46, %f28;
	fma.rn.f32 	%f51, %f1, %f47, %f30;
	mul.f32 	%f52, %f51, %f51;
	fma.rn.f32 	%f53, %f50, %f50, %f52;
	setp.gtu.f32 	%p1, %f53, 0f3F800000;
	@%p1 bra 	LBB2_2;

	mov.u32 	%r2, 254;
	// begin inline asm
	call (%r1), _optix_report_intersection_0, (%f1, %r2);
	// end inline asm

LBB2_2:
	ret;

}
	// .globl	__closesthit__disk
.visible .entry __closesthit__disk()
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<195>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<75>;


	// begin inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	@%p1 bra 	LBB3_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32 	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	LBB3_12;

LBB3_2:
	// begin inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd9, [%rd8+8];
	// begin inline asm
	call (%f38), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f39), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f40), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f41), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f42), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f43), _optix_get_world_ray_direction_z, ();
	// end inline asm
	add.s64 	%rd3, %rd9, 208;
	ld.v4.f32 	{%f44, %f45, %f46, %f47}, [%rd9+208];
	ld.f32 	%f51, [%rd9+160];
	fma.rn.f32 	%f52, %f38, %f51, %f44;
	ld.f32 	%f53, [%rd9+164];
	fma.rn.f32 	%f54, %f38, %f53, %f45;
	ld.f32 	%f55, [%rd9+168];
	fma.rn.f32 	%f56, %f38, %f55, %f46;
	ld.f32 	%f57, [%rd9+176];
	fma.rn.f32 	%f58, %f39, %f57, %f52;
	ld.f32 	%f59, [%rd9+180];
	fma.rn.f32 	%f60, %f39, %f59, %f54;
	ld.f32 	%f61, [%rd9+184];
	fma.rn.f32 	%f62, %f39, %f61, %f56;
	ld.f32 	%f63, [%rd9+192];
	fma.rn.f32 	%f64, %f40, %f63, %f58;
	ld.f32 	%f65, [%rd9+196];
	fma.rn.f32 	%f66, %f40, %f65, %f60;
	ld.f32 	%f67, [%rd9+200];
	fma.rn.f32 	%f68, %f40, %f67, %f62;
	ld.v4.f32 	{%f69, %f70, %f71, %f72}, [%rd9+160];
	mul.f32 	%f76, %f41, %f69;
	mul.f32 	%f77, %f41, %f70;
	mul.f32 	%f78, %f41, %f71;
	fma.rn.f32 	%f79, %f42, %f57, %f76;
	fma.rn.f32 	%f80, %f42, %f59, %f77;
	fma.rn.f32 	%f81, %f42, %f61, %f78;
	fma.rn.f32 	%f82, %f43, %f63, %f79;
	fma.rn.f32 	%f83, %f43, %f65, %f80;
	fma.rn.f32 	%f84, %f43, %f67, %f81;
	neg.f32 	%f85, %f68;
	div.rn.f32 	%f7, %f85, %f84;
	fma.rn.f32 	%f8, %f7, %f82, %f64;
	fma.rn.f32 	%f9, %f7, %f83, %f66;
	mul.f32 	%f86, %f8, %f8;
	fma.rn.f32 	%f87, %f9, %f9, %f86;
	sqrt.rn.f32 	%f10, %f87;
	abs.f32 	%f11, %f8;
	abs.f32 	%f12, %f9;
	setp.eq.f32 	%p2, %f11, 0f00000000;
	setp.eq.f32 	%p3, %f12, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	mov.b32 	%r2, %f8;
	mov.b32 	%r11, %f9;
	and.b32  	%r3, %r11, -2147483648;
	@%p4 bra 	LBB3_6;
	bra.uni 	LBB3_3;

LBB3_6:
	shr.s32 	%r16, %r2, 31;
	and.b32  	%r17, %r16, 1078530011;
	or.b32  	%r18, %r17, %r3;
	mov.b32 	%f185, %r18;
	bra.uni 	LBB3_7;

LBB3_3:
	setp.eq.f32 	%p5, %f11, 0f7F800000;
	setp.eq.f32 	%p6, %f12, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB3_5;
	bra.uni 	LBB3_4;

LBB3_5:
	setp.lt.s32 	%p11, %r2, 0;
	selp.b32 	%r14, 1075235812, 1061752795, %p11;
	or.b32  	%r15, %r14, %r3;
	mov.b32 	%f185, %r15;
	bra.uni 	LBB3_7;

LBB3_4:
	setp.lt.s32 	%p8, %r2, 0;
	min.f32 	%f88, %f12, %f11;
	max.f32 	%f89, %f12, %f11;
	div.rn.f32 	%f90, %f88, %f89;
	mul.rn.f32 	%f91, %f90, %f90;
	mov.f32 	%f92, 0fC0B59883;
	mov.f32 	%f93, 0fBF52C7EA;
	fma.rn.f32 	%f94, %f91, %f93, %f92;
	mov.f32 	%f95, 0fC0D21907;
	fma.rn.f32 	%f96, %f94, %f91, %f95;
	mul.f32 	%f97, %f91, %f96;
	mul.f32 	%f98, %f90, %f97;
	add.f32 	%f99, %f91, 0f41355DC0;
	mov.f32 	%f100, 0f41E6BD60;
	fma.rn.f32 	%f101, %f99, %f91, %f100;
	mov.f32 	%f102, 0f419D92C8;
	fma.rn.f32 	%f103, %f101, %f91, %f102;
	rcp.rn.f32 	%f104, %f103;
	fma.rn.f32 	%f105, %f98, %f104, %f90;
	mov.f32 	%f106, 0f3FC90FDB;
	sub.f32 	%f107, %f106, %f105;
	setp.gt.f32 	%p9, %f12, %f11;
	selp.f32 	%f108, %f107, %f105, %p9;
	mov.f32 	%f109, 0f40490FDB;
	sub.f32 	%f110, %f109, %f108;
	selp.f32 	%f111, %f110, %f108, %p8;
	mov.b32 	%r12, %f111;
	or.b32  	%r13, %r3, %r12;
	mov.b32 	%f112, %r13;
	add.f32 	%f113, %f11, %f12;
	setp.le.f32 	%p10, %f113, 0f7F800000;
	selp.f32 	%f185, %f112, %f113, %p10;

LBB3_7:
	fma.rn.f32 	%f17, %f41, %f7, %f38;
	fma.rn.f32 	%f18, %f42, %f7, %f39;
	fma.rn.f32 	%f19, %f43, %f7, %f40;
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16 	%p12, %rs1, 0;
	@%p12 bra 	LBB3_9;

	rcp.rn.f32 	%f115, %f10;
	mov.f32 	%f116, 0f3F800000;
	setp.neu.f32 	%p13, %f10, 0f00000000;
	mov.f32 	%f117, 0f00000000;
	mul.f32 	%f118, %f8, %f115;
	selp.f32 	%f119, %f118, 0f3F800000, %p13;
	mul.f32 	%f120, %f9, %f115;
	selp.f32 	%f121, %f120, 0f00000000, %p13;
	ld.v4.f32 	{%f122, %f123, %f124, %f125}, [%rd3+-176];
	mul.f32 	%f129, %f119, %f122;
	mul.f32 	%f130, %f119, %f123;
	mul.f32 	%f131, %f119, %f124;
	ld.v4.f32 	{%f132, %f133, %f134, %f135}, [%rd3+-160];
	fma.rn.f32 	%f139, %f121, %f132, %f129;
	fma.rn.f32 	%f140, %f121, %f133, %f130;
	fma.rn.f32 	%f141, %f121, %f134, %f131;
	ld.f32 	%f142, [%rd3+-144];
	fma.rn.f32 	%f191, %f117, %f142, %f139;
	ld.f32 	%f143, [%rd3+-140];
	fma.rn.f32 	%f190, %f117, %f143, %f140;
	ld.f32 	%f144, [%rd3+-136];
	fma.rn.f32 	%f189, %f117, %f144, %f141;
	neg.f32 	%f145, %f121;
	mul.f32 	%f146, %f122, %f145;
	mul.f32 	%f147, %f123, %f145;
	mul.f32 	%f148, %f124, %f145;
	fma.rn.f32 	%f149, %f119, %f132, %f146;
	fma.rn.f32 	%f150, %f119, %f133, %f147;
	fma.rn.f32 	%f151, %f119, %f134, %f148;
	fma.rn.f32 	%f194, %f117, %f142, %f149;
	fma.rn.f32 	%f193, %f117, %f143, %f150;
	fma.rn.f32 	%f192, %f117, %f144, %f151;
	ld.v4.f32 	{%f152, %f153, %f154, %f155}, [%rd3+-112];
	mul.f32 	%f159, %f152, 0f00000000;
	mul.f32 	%f160, %f153, 0f00000000;
	mul.f32 	%f161, %f154, 0f00000000;
	ld.v4.f32 	{%f162, %f163, %f164, %f165}, [%rd3+-96];
	fma.rn.f32 	%f169, %f117, %f162, %f159;
	fma.rn.f32 	%f170, %f117, %f163, %f160;
	fma.rn.f32 	%f171, %f117, %f164, %f161;
	ld.f32 	%f172, [%rd3+-80];
	fma.rn.f32 	%f173, %f116, %f172, %f169;
	ld.f32 	%f174, [%rd3+-76];
	fma.rn.f32 	%f175, %f116, %f174, %f170;
	ld.f32 	%f176, [%rd3+-72];
	fma.rn.f32 	%f177, %f116, %f176, %f171;
	mul.f32 	%f178, %f173, %f173;
	fma.rn.f32 	%f179, %f175, %f175, %f178;
	fma.rn.f32 	%f180, %f177, %f177, %f179;
	sqrt.rn.f32 	%f181, %f180;
	div.rn.f32 	%f187, %f173, %f181;
	div.rn.f32 	%f186, %f175, %f181;
	div.rn.f32 	%f188, %f177, %f181;

LBB3_9:
	cvt.f64.f32 	%fd1, %f185;
	div.rn.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64 	%f182, %fd2;
	ld.u64 	%rd10, [%rd8];
	// begin inline asm
	call (%r19), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.u64 	%rd11, [params+216];
	cvta.to.global.u64 	%rd12, %rd11;
	cvt.u64.u32 	%rd4, %r1;
	mul.wide.u32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u64 	[%rd14], %rd10;
	ld.const.u64 	%rd15, [params+224];
	cvta.to.global.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.u32 	[%rd18], %r19;
	ld.const.u64 	%rd19, [params+80];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd17;
	st.global.f32 	[%rd21], %f10;
	ld.const.u64 	%rd22, [params+88];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd17;
	setp.lt.f32 	%p14, %f182, 0f00000000;
	add.f32 	%f183, %f182, 0f3F800000;
	selp.f32 	%f184, %f183, %f182, %p14;
	st.global.f32 	[%rd24], %f184;
	ld.const.u64 	%rd25, [params+144];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd17;
	st.global.f32 	[%rd27], %f17;
	ld.const.u64 	%rd28, [params+152];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd17;
	st.global.f32 	[%rd30], %f18;
	ld.const.u64 	%rd31, [params+160];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd17;
	st.global.f32 	[%rd33], %f19;
	@%p12 bra 	LBB3_11;

	ld.const.u64 	%rd34, [params+96];
	cvta.to.global.u64 	%rd35, %rd34;
	shl.b64 	%rd36, %rd4, 2;
	add.s64 	%rd37, %rd35, %rd36;
	st.global.f32 	[%rd37], %f187;
	ld.const.u64 	%rd38, [params+104];
	cvta.to.global.u64 	%rd39, %rd38;
	add.s64 	%rd40, %rd39, %rd36;
	st.global.f32 	[%rd40], %f186;
	ld.const.u64 	%rd41, [params+112];
	cvta.to.global.u64 	%rd42, %rd41;
	add.s64 	%rd43, %rd42, %rd36;
	st.global.f32 	[%rd43], %f188;
	ld.const.u64 	%rd44, [params+120];
	cvta.to.global.u64 	%rd45, %rd44;
	add.s64 	%rd46, %rd45, %rd36;
	st.global.f32 	[%rd46], %f187;
	ld.const.u64 	%rd47, [params+128];
	cvta.to.global.u64 	%rd48, %rd47;
	add.s64 	%rd49, %rd48, %rd36;
	st.global.f32 	[%rd49], %f186;
	ld.const.u64 	%rd50, [params+136];
	cvta.to.global.u64 	%rd51, %rd50;
	add.s64 	%rd52, %rd51, %rd36;
	st.global.f32 	[%rd52], %f188;
	ld.const.u64 	%rd53, [params+168];
	cvta.to.global.u64 	%rd54, %rd53;
	add.s64 	%rd55, %rd54, %rd36;
	st.global.f32 	[%rd55], %f191;
	ld.const.u64 	%rd56, [params+176];
	cvta.to.global.u64 	%rd57, %rd56;
	add.s64 	%rd58, %rd57, %rd36;
	st.global.f32 	[%rd58], %f190;
	ld.const.u64 	%rd59, [params+184];
	cvta.to.global.u64 	%rd60, %rd59;
	add.s64 	%rd61, %rd60, %rd36;
	st.global.f32 	[%rd61], %f189;
	ld.const.u64 	%rd62, [params+192];
	cvta.to.global.u64 	%rd63, %rd62;
	add.s64 	%rd64, %rd63, %rd36;
	st.global.f32 	[%rd64], %f194;
	ld.const.u64 	%rd65, [params+200];
	cvta.to.global.u64 	%rd66, %rd65;
	add.s64 	%rd67, %rd66, %rd36;
	st.global.f32 	[%rd67], %f193;
	ld.const.u64 	%rd68, [params+208];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd70, %rd69, %rd36;
	st.global.f32 	[%rd70], %f192;

LBB3_11:
	ld.const.u64 	%rd71, [params+72];
	cvta.to.global.u64 	%rd72, %rd71;
	shl.b64 	%rd73, %rd4, 2;
	add.s64 	%rd74, %rd72, %rd73;
	st.global.f32 	[%rd74], %f7;

LBB3_12:
	ret;

}
	// .globl	__closesthit__mesh
.visible .entry __closesthit__mesh()
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<184>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<104>;


	// begin inline asm
	call (%r2), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r3), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r6), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r7), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r8, %r7, %r3, %r6;
	mad.lo.s32 	%r1, %r8, %r2, %r5;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	@%p1 bra 	LBB4_2;

	cvta.to.global.u64 	%rd13, %rd1;
	cvt.u64.u32 	%rd14, %r1;
	add.s64 	%rd15, %rd13, %rd14;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd15], %rs2;
	bra.uni 	LBB4_11;

LBB4_2:
	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd3, [%rd16+8];
	// begin inline asm
	call (%f182, %f183), _optix_get_triangle_barycentrics, ();
	// end inline asm
	mov.f32 	%f69, 0f3F800000;
	sub.f32 	%f70, %f69, %f182;
	sub.f32 	%f3, %f70, %f183;
	ld.u64 	%rd17, [%rd3];
	// begin inline asm
	call (%r9), _optix_read_primitive_idx, ();
	// end inline asm
	mul.wide.u32 	%rd18, %r9, 12;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u32 	%r10, [%rd19];
	cvt.u64.u32 	%rd4, %r10;
	mul.wide.u32 	%rd5, %r10, 3;
	ld.u64 	%rd20, [%rd3+8];
	shl.b64 	%rd21, %rd5, 2;
	add.s64 	%rd22, %rd20, %rd21;
	ld.u32 	%r11, [%rd19+4];
	cvt.u64.u32 	%rd6, %r11;
	mul.wide.u32 	%rd7, %r11, 3;
	shl.b64 	%rd23, %rd7, 2;
	add.s64 	%rd24, %rd20, %rd23;
	ld.u32 	%r12, [%rd19+8];
	cvt.u64.u32 	%rd8, %r12;
	mul.wide.u32 	%rd9, %r12, 3;
	shl.b64 	%rd25, %rd9, 2;
	add.s64 	%rd26, %rd20, %rd25;
	ld.f32 	%f4, [%rd22];
	ld.f32 	%f5, [%rd22+4];
	ld.f32 	%f6, [%rd22+8];
	ld.f32 	%f7, [%rd24];
	mul.f32 	%f71, %f7, %f182;
	ld.f32 	%f8, [%rd24+4];
	mul.f32 	%f72, %f8, %f182;
	ld.f32 	%f9, [%rd24+8];
	mul.f32 	%f73, %f9, %f182;
	fma.rn.f32 	%f74, %f4, %f3, %f71;
	fma.rn.f32 	%f75, %f5, %f3, %f72;
	fma.rn.f32 	%f76, %f6, %f3, %f73;
	ld.f32 	%f10, [%rd26];
	ld.f32 	%f11, [%rd26+4];
	ld.f32 	%f12, [%rd26+8];
	fma.rn.f32 	%f13, %f10, %f183, %f74;
	fma.rn.f32 	%f14, %f11, %f183, %f75;
	fma.rn.f32 	%f15, %f12, %f183, %f76;
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16 	%p2, %rs1, 0;
	@%p2 bra 	LBB4_8;

	sub.f32 	%f16, %f7, %f4;
	sub.f32 	%f17, %f12, %f6;
	sub.f32 	%f18, %f8, %f5;
	mul.f32 	%f77, %f18, %f17;
	sub.f32 	%f19, %f11, %f5;
	sub.f32 	%f20, %f9, %f6;
	mul.f32 	%f78, %f20, %f19;
	sub.f32 	%f79, %f77, %f78;
	sub.f32 	%f21, %f10, %f4;
	mul.f32 	%f80, %f20, %f21;
	mul.f32 	%f81, %f16, %f17;
	sub.f32 	%f82, %f80, %f81;
	mul.f32 	%f83, %f16, %f19;
	mul.f32 	%f84, %f18, %f21;
	sub.f32 	%f85, %f83, %f84;
	mul.f32 	%f86, %f79, %f79;
	fma.rn.f32 	%f87, %f82, %f82, %f86;
	fma.rn.f32 	%f88, %f85, %f85, %f87;
	sqrt.rn.f32 	%f89, %f88;
	div.rn.f32 	%f179, %f79, %f89;
	div.rn.f32 	%f180, %f82, %f89;
	div.rn.f32 	%f181, %f85, %f89;
	mov.b32 	%r13, %f181;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r14, 1065353216;
	mov.b32 	%f25, %r15;
	add.f32 	%f90, %f181, %f25;
	mov.f32 	%f91, 0fBF800000;
	div.rn.f32 	%f92, %f91, %f90;
	mul.f32 	%f93, %f179, %f180;
	mul.f32 	%f170, %f93, %f92;
	mul.f32 	%f94, %f179, %f179;
	mul.f32 	%f95, %f94, %f92;
	fma.rn.f32 	%f173, %f95, %f25, 0f3F800000;
	mul.f32 	%f96, %f180, %f180;
	fma.rn.f32 	%f171, %f96, %f92, %f25;
	ld.u64 	%rd10, [%rd3+16];
	setp.eq.s64 	%p3, %rd10, 0;
	mov.f32 	%f176, %f179;
	mov.f32 	%f177, %f180;
	mov.f32 	%f178, %f181;
	@%p3 bra 	LBB4_5;

	add.s64 	%rd28, %rd10, %rd21;
	add.s64 	%rd30, %rd10, %rd23;
	add.s64 	%rd32, %rd10, %rd25;
	ld.f32 	%f97, [%rd28];
	ld.f32 	%f98, [%rd28+4];
	ld.f32 	%f99, [%rd28+8];
	ld.f32 	%f100, [%rd30];
	mul.f32 	%f101, %f100, %f182;
	ld.f32 	%f102, [%rd30+4];
	mul.f32 	%f103, %f102, %f182;
	ld.f32 	%f104, [%rd30+8];
	mul.f32 	%f105, %f104, %f182;
	fma.rn.f32 	%f106, %f97, %f3, %f101;
	fma.rn.f32 	%f107, %f98, %f3, %f103;
	fma.rn.f32 	%f108, %f99, %f3, %f105;
	ld.f32 	%f109, [%rd32];
	ld.f32 	%f110, [%rd32+4];
	ld.f32 	%f111, [%rd32+8];
	fma.rn.f32 	%f112, %f109, %f183, %f106;
	fma.rn.f32 	%f113, %f110, %f183, %f107;
	fma.rn.f32 	%f114, %f111, %f183, %f108;
	mul.f32 	%f115, %f112, %f112;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	fma.rn.f32 	%f117, %f114, %f114, %f116;
	sqrt.rn.f32 	%f118, %f117;
	div.rn.f32 	%f176, %f112, %f118;
	div.rn.f32 	%f177, %f113, %f118;
	div.rn.f32 	%f178, %f114, %f118;

LBB4_5:
	mul.f32 	%f174, %f170, %f25;
	mul.f32 	%f119, %f179, %f25;
	neg.f32 	%f175, %f119;
	neg.f32 	%f172, %f180;
	ld.u64 	%rd11, [%rd3+24];
	setp.eq.s64 	%p4, %rd11, 0;
	@%p4 bra 	LBB4_8;

	shl.b64 	%rd33, %rd4, 3;
	add.s64 	%rd34, %rd11, %rd33;
	shl.b64 	%rd35, %rd6, 3;
	add.s64 	%rd36, %rd11, %rd35;
	shl.b64 	%rd37, %rd8, 3;
	add.s64 	%rd38, %rd11, %rd37;
	ld.f32 	%f120, [%rd34];
	ld.f32 	%f121, [%rd34+4];
	ld.f32 	%f122, [%rd36];
	mul.f32 	%f123, %f122, %f182;
	ld.f32 	%f124, [%rd36+4];
	mul.f32 	%f125, %f124, %f182;
	fma.rn.f32 	%f126, %f120, %f3, %f123;
	fma.rn.f32 	%f127, %f121, %f3, %f125;
	ld.f32 	%f128, [%rd38];
	ld.f32 	%f129, [%rd38+4];
	fma.rn.f32 	%f182, %f128, %f183, %f126;
	fma.rn.f32 	%f183, %f129, %f183, %f127;
	sub.f32 	%f40, %f122, %f120;
	sub.f32 	%f41, %f124, %f121;
	sub.f32 	%f42, %f128, %f120;
	sub.f32 	%f43, %f129, %f121;
	mul.f32 	%f130, %f40, %f43;
	mul.f32 	%f131, %f41, %f42;
	sub.f32 	%f44, %f130, %f131;
	setp.eq.f32 	%p5, %f44, 0f00000000;
	@%p5 bra 	LBB4_8;

	rcp.rn.f32 	%f132, %f44;
	mul.f32 	%f133, %f41, %f21;
	mul.f32 	%f134, %f43, %f16;
	sub.f32 	%f135, %f134, %f133;
	mul.f32 	%f136, %f41, %f19;
	mul.f32 	%f137, %f43, %f18;
	sub.f32 	%f138, %f137, %f136;
	mul.f32 	%f139, %f41, %f17;
	mul.f32 	%f140, %f43, %f20;
	sub.f32 	%f141, %f140, %f139;
	mul.f32 	%f173, %f135, %f132;
	mul.f32 	%f174, %f138, %f132;
	mul.f32 	%f175, %f141, %f132;
	mul.f32 	%f142, %f16, %f42;
	mul.f32 	%f143, %f18, %f42;
	mul.f32 	%f144, %f20, %f42;
	mul.f32 	%f145, %f40, %f21;
	sub.f32 	%f146, %f145, %f142;
	mul.f32 	%f147, %f40, %f19;
	sub.f32 	%f148, %f147, %f143;
	mul.f32 	%f149, %f40, %f17;
	sub.f32 	%f150, %f149, %f144;
	mul.f32 	%f170, %f146, %f132;
	mul.f32 	%f171, %f148, %f132;
	mul.f32 	%f172, %f150, %f132;

LBB4_8:
	// begin inline asm
	call (%f151), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f152), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f153), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f154), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f155), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f156), _optix_get_world_ray_direction_z, ();
	// end inline asm
	sub.f32 	%f157, %f13, %f151;
	sub.f32 	%f158, %f14, %f152;
	sub.f32 	%f159, %f15, %f153;
	mul.f32 	%f160, %f157, %f157;
	fma.rn.f32 	%f161, %f158, %f158, %f160;
	fma.rn.f32 	%f162, %f159, %f159, %f161;
	mul.f32 	%f163, %f154, %f154;
	fma.rn.f32 	%f164, %f155, %f155, %f163;
	fma.rn.f32 	%f165, %f156, %f156, %f164;
	div.rn.f32 	%f65, %f162, %f165;
	ld.u64 	%rd39, [%rd16];
	// begin inline asm
	call (%r16), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.u64 	%rd40, [params+216];
	cvta.to.global.u64 	%rd41, %rd40;
	cvt.u64.u32 	%rd12, %r1;
	mul.wide.u32 	%rd42, %r1, 8;
	add.s64 	%rd43, %rd41, %rd42;
	st.global.u64 	[%rd43], %rd39;
	ld.const.u64 	%rd44, [params+224];
	cvta.to.global.u64 	%rd45, %rd44;
	mul.wide.u32 	%rd46, %r1, 4;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.u32 	[%rd47], %r16;
	ld.const.u64 	%rd48, [params+80];
	cvta.to.global.u64 	%rd49, %rd48;
	add.s64 	%rd50, %rd49, %rd46;
	st.global.f32 	[%rd50], %f182;
	ld.const.u64 	%rd51, [params+88];
	cvta.to.global.u64 	%rd52, %rd51;
	add.s64 	%rd53, %rd52, %rd46;
	st.global.f32 	[%rd53], %f183;
	ld.const.u64 	%rd54, [params+144];
	cvta.to.global.u64 	%rd55, %rd54;
	add.s64 	%rd56, %rd55, %rd46;
	st.global.f32 	[%rd56], %f13;
	ld.const.u64 	%rd57, [params+152];
	cvta.to.global.u64 	%rd58, %rd57;
	add.s64 	%rd59, %rd58, %rd46;
	st.global.f32 	[%rd59], %f14;
	ld.const.u64 	%rd60, [params+160];
	cvta.to.global.u64 	%rd61, %rd60;
	add.s64 	%rd62, %rd61, %rd46;
	st.global.f32 	[%rd62], %f15;
	@%p2 bra 	LBB4_10;

	ld.const.u64 	%rd63, [params+96];
	cvta.to.global.u64 	%rd64, %rd63;
	shl.b64 	%rd65, %rd12, 2;
	add.s64 	%rd66, %rd64, %rd65;
	st.global.f32 	[%rd66], %f179;
	ld.const.u64 	%rd67, [params+104];
	cvta.to.global.u64 	%rd68, %rd67;
	add.s64 	%rd69, %rd68, %rd65;
	st.global.f32 	[%rd69], %f180;
	ld.const.u64 	%rd70, [params+112];
	cvta.to.global.u64 	%rd71, %rd70;
	add.s64 	%rd72, %rd71, %rd65;
	st.global.f32 	[%rd72], %f181;
	ld.const.u64 	%rd73, [params+120];
	cvta.to.global.u64 	%rd74, %rd73;
	add.s64 	%rd75, %rd74, %rd65;
	st.global.f32 	[%rd75], %f176;
	ld.const.u64 	%rd76, [params+128];
	cvta.to.global.u64 	%rd77, %rd76;
	add.s64 	%rd78, %rd77, %rd65;
	st.global.f32 	[%rd78], %f177;
	ld.const.u64 	%rd79, [params+136];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd81, %rd80, %rd65;
	st.global.f32 	[%rd81], %f178;
	ld.const.u64 	%rd82, [params+168];
	cvta.to.global.u64 	%rd83, %rd82;
	add.s64 	%rd84, %rd83, %rd65;
	st.global.f32 	[%rd84], %f173;
	ld.const.u64 	%rd85, [params+176];
	cvta.to.global.u64 	%rd86, %rd85;
	add.s64 	%rd87, %rd86, %rd65;
	st.global.f32 	[%rd87], %f174;
	ld.const.u64 	%rd88, [params+184];
	cvta.to.global.u64 	%rd89, %rd88;
	add.s64 	%rd90, %rd89, %rd65;
	st.global.f32 	[%rd90], %f175;
	ld.const.u64 	%rd91, [params+192];
	cvta.to.global.u64 	%rd92, %rd91;
	add.s64 	%rd93, %rd92, %rd65;
	st.global.f32 	[%rd93], %f170;
	ld.const.u64 	%rd94, [params+200];
	cvta.to.global.u64 	%rd95, %rd94;
	add.s64 	%rd96, %rd95, %rd65;
	st.global.f32 	[%rd96], %f171;
	ld.const.u64 	%rd97, [params+208];
	cvta.to.global.u64 	%rd98, %rd97;
	add.s64 	%rd99, %rd98, %rd65;
	st.global.f32 	[%rd99], %f172;

LBB4_10:
	ld.const.u64 	%rd100, [params+72];
	cvta.to.global.u64 	%rd101, %rd100;
	shl.b64 	%rd102, %rd12, 2;
	add.s64 	%rd103, %rd101, %rd102;
	sqrt.rn.f32 	%f166, %f65;
	st.global.f32 	[%rd103], %f166;

LBB4_11:
	ret;

}
	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle()
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<3>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+8];
	// begin inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f6), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f7), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f8), _optix_get_world_ray_direction_z, ();
	// end inline asm
	ld.v4.f32 	{%f9, %f10, %f11, %f12}, [%rd2+80];
	ld.f32 	%f16, [%rd2+32];
	fma.rn.f32 	%f17, %f3, %f16, %f9;
	ld.f32 	%f18, [%rd2+36];
	fma.rn.f32 	%f19, %f3, %f18, %f10;
	ld.f32 	%f20, [%rd2+40];
	fma.rn.f32 	%f21, %f3, %f20, %f11;
	ld.f32 	%f22, [%rd2+48];
	fma.rn.f32 	%f23, %f4, %f22, %f17;
	ld.f32 	%f24, [%rd2+52];
	fma.rn.f32 	%f25, %f4, %f24, %f19;
	ld.f32 	%f26, [%rd2+56];
	fma.rn.f32 	%f27, %f4, %f26, %f21;
	ld.f32 	%f28, [%rd2+64];
	fma.rn.f32 	%f29, %f5, %f28, %f23;
	ld.f32 	%f30, [%rd2+68];
	fma.rn.f32 	%f31, %f5, %f30, %f25;
	ld.f32 	%f32, [%rd2+72];
	fma.rn.f32 	%f33, %f5, %f32, %f27;
	ld.v4.f32 	{%f34, %f35, %f36, %f37}, [%rd2+32];
	mul.f32 	%f41, %f6, %f34;
	mul.f32 	%f42, %f6, %f35;
	mul.f32 	%f43, %f6, %f36;
	fma.rn.f32 	%f44, %f7, %f22, %f41;
	fma.rn.f32 	%f45, %f7, %f24, %f42;
	fma.rn.f32 	%f46, %f7, %f26, %f43;
	fma.rn.f32 	%f47, %f8, %f28, %f44;
	fma.rn.f32 	%f48, %f8, %f30, %f45;
	fma.rn.f32 	%f49, %f8, %f32, %f46;
	neg.f32 	%f50, %f33;
	div.rn.f32 	%f1, %f50, %f49;
	fma.rn.f32 	%f51, %f1, %f47, %f29;
	fma.rn.f32 	%f2, %f1, %f48, %f31;
	abs.f32 	%f52, %f51;
	setp.gtu.f32 	%p1, %f52, 0f3F800000;
	@%p1 bra 	LBB5_3;

	abs.f32 	%f53, %f2;
	setp.gtu.f32 	%p2, %f53, 0f3F800000;
	@%p2 bra 	LBB5_3;

	mov.u32 	%r2, 254;
	// begin inline asm
	call (%r1), _optix_report_intersection_0, (%f1, %r2);
	// end inline asm

LBB5_3:
	ret;

}
	// .globl	__closesthit__rectangle
.visible .entry __closesthit__rectangle()
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<72>;


	// begin inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	cvt.u64.u32 	%rd2, %r8;
	@%p1 bra 	LBB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s64 	%rd4, %rd3, %rd2;
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd4], %rs1;
	bra.uni 	LBB6_5;

LBB6_2:
	// begin inline asm
	call (%rd5), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd6, [%rd5+8];
	ld.v4.f32 	{%f20, %f21, %f22, %f23}, [%rd6+160];
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd6+176];
	ld.v4.f32 	{%f28, %f29, %f30, %f31}, [%rd6+192];
	// begin inline asm
	call (%f14), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f15), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f16), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f17), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_world_ray_direction_z, ();
	// end inline asm
	ld.v4.f32 	{%f32, %f33, %f34, %f35}, [%rd6+80];
	ld.f32 	%f39, [%rd6+32];
	fma.rn.f32 	%f40, %f14, %f39, %f32;
	ld.f32 	%f41, [%rd6+36];
	fma.rn.f32 	%f42, %f14, %f41, %f33;
	ld.f32 	%f43, [%rd6+40];
	fma.rn.f32 	%f44, %f14, %f43, %f34;
	ld.f32 	%f45, [%rd6+48];
	fma.rn.f32 	%f46, %f15, %f45, %f40;
	ld.f32 	%f47, [%rd6+52];
	fma.rn.f32 	%f48, %f15, %f47, %f42;
	ld.f32 	%f49, [%rd6+56];
	fma.rn.f32 	%f50, %f15, %f49, %f44;
	ld.f32 	%f51, [%rd6+64];
	fma.rn.f32 	%f52, %f16, %f51, %f46;
	ld.f32 	%f53, [%rd6+68];
	fma.rn.f32 	%f54, %f16, %f53, %f48;
	ld.f32 	%f55, [%rd6+72];
	fma.rn.f32 	%f56, %f16, %f55, %f50;
	ld.v4.f32 	{%f57, %f58, %f59, %f60}, [%rd6+32];
	mul.f32 	%f64, %f17, %f57;
	mul.f32 	%f65, %f17, %f58;
	mul.f32 	%f66, %f17, %f59;
	fma.rn.f32 	%f67, %f18, %f45, %f64;
	fma.rn.f32 	%f68, %f18, %f47, %f65;
	fma.rn.f32 	%f69, %f18, %f49, %f66;
	fma.rn.f32 	%f70, %f19, %f51, %f67;
	fma.rn.f32 	%f71, %f19, %f53, %f68;
	fma.rn.f32 	%f72, %f19, %f55, %f69;
	neg.f32 	%f73, %f56;
	div.rn.f32 	%f13, %f73, %f72;
	fma.rn.f32 	%f74, %f17, %f13, %f14;
	fma.rn.f32 	%f75, %f18, %f13, %f15;
	fma.rn.f32 	%f76, %f19, %f13, %f16;
	fma.rn.f32 	%f77, %f13, %f70, %f52;
	fma.rn.f32 	%f78, %f13, %f71, %f54;
	fma.rn.f32 	%f79, %f77, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f80, %f78, 0f3F000000, 0f3F000000;
	ld.u64 	%rd7, [%rd5];
	// begin inline asm
	call (%r9), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.u64 	%rd8, [params+216];
	cvta.to.global.u64 	%rd9, %rd8;
	shl.b64 	%rd10, %rd2, 3;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.u64 	[%rd11], %rd7;
	ld.const.u64 	%rd12, [params+224];
	cvta.to.global.u64 	%rd13, %rd12;
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.u32 	[%rd15], %r9;
	ld.const.u64 	%rd16, [params+80];
	cvta.to.global.u64 	%rd17, %rd16;
	add.s64 	%rd18, %rd17, %rd14;
	st.global.f32 	[%rd18], %f79;
	ld.const.u64 	%rd19, [params+88];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd14;
	st.global.f32 	[%rd21], %f80;
	ld.const.u64 	%rd22, [params+144];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd14;
	st.global.f32 	[%rd24], %f74;
	ld.const.u64 	%rd25, [params+152];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd14;
	st.global.f32 	[%rd27], %f75;
	ld.const.u64 	%rd28, [params+160];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd14;
	st.global.f32 	[%rd30], %f76;
	ld.const.u8 	%rs2, [params+248];
	setp.eq.s16 	%p2, %rs2, 0;
	@%p2 bra 	LBB6_4;

	ld.const.u64 	%rd31, [params+96];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd34, %rd32, %rd14;
	st.global.f32 	[%rd34], %f20;
	ld.const.u64 	%rd35, [params+104];
	cvta.to.global.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd14;
	st.global.f32 	[%rd37], %f21;
	ld.const.u64 	%rd38, [params+112];
	cvta.to.global.u64 	%rd39, %rd38;
	add.s64 	%rd40, %rd39, %rd14;
	st.global.f32 	[%rd40], %f22;
	ld.const.u64 	%rd41, [params+120];
	cvta.to.global.u64 	%rd42, %rd41;
	add.s64 	%rd43, %rd42, %rd14;
	st.global.f32 	[%rd43], %f20;
	ld.const.u64 	%rd44, [params+128];
	cvta.to.global.u64 	%rd45, %rd44;
	add.s64 	%rd46, %rd45, %rd14;
	st.global.f32 	[%rd46], %f21;
	ld.const.u64 	%rd47, [params+136];
	cvta.to.global.u64 	%rd48, %rd47;
	add.s64 	%rd49, %rd48, %rd14;
	st.global.f32 	[%rd49], %f22;
	ld.const.u64 	%rd50, [params+168];
	cvta.to.global.u64 	%rd51, %rd50;
	add.s64 	%rd52, %rd51, %rd14;
	st.global.f32 	[%rd52], %f24;
	ld.const.u64 	%rd53, [params+176];
	cvta.to.global.u64 	%rd54, %rd53;
	add.s64 	%rd55, %rd54, %rd14;
	st.global.f32 	[%rd55], %f25;
	ld.const.u64 	%rd56, [params+184];
	cvta.to.global.u64 	%rd57, %rd56;
	add.s64 	%rd58, %rd57, %rd14;
	st.global.f32 	[%rd58], %f26;
	ld.const.u64 	%rd59, [params+192];
	cvta.to.global.u64 	%rd60, %rd59;
	add.s64 	%rd61, %rd60, %rd14;
	st.global.f32 	[%rd61], %f28;
	ld.const.u64 	%rd62, [params+200];
	cvta.to.global.u64 	%rd63, %rd62;
	add.s64 	%rd64, %rd63, %rd14;
	st.global.f32 	[%rd64], %f29;
	ld.const.u64 	%rd65, [params+208];
	cvta.to.global.u64 	%rd66, %rd65;
	add.s64 	%rd67, %rd66, %rd14;
	st.global.f32 	[%rd67], %f30;

LBB6_4:
	ld.const.u64 	%rd68, [params+72];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd71, %rd69, %rd14;
	st.global.f32 	[%rd71], %f13;

LBB6_5:
	ret;

}
	// .globl	__intersection__sphere
.visible .entry __intersection__sphere()
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<52>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<3>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+8];
	// begin inline asm
	call (%f13), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f14), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f15), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f16), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f17), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f20), _optix_get_world_ray_direction_z, ();
	// end inline asm
	ld.f32 	%f22, [%rd2+288];
	sub.f32 	%f23, %f15, %f22;
	ld.f32 	%f24, [%rd2+292];
	sub.f32 	%f25, %f16, %f24;
	ld.f32 	%f26, [%rd2+296];
	sub.f32 	%f27, %f17, %f26;
	mul.f32 	%f28, %f18, %f18;
	fma.rn.f32 	%f29, %f19, %f19, %f28;
	fma.rn.f32 	%f3, %f20, %f20, %f29;
	mul.f32 	%f30, %f23, %f18;
	fma.rn.f32 	%f31, %f25, %f19, %f30;
	fma.rn.f32 	%f32, %f27, %f20, %f31;
	add.f32 	%f4, %f32, %f32;
	mul.f32 	%f33, %f23, %f23;
	fma.rn.f32 	%f34, %f25, %f25, %f33;
	fma.rn.f32 	%f35, %f27, %f27, %f34;
	ld.f32 	%f36, [%rd2+304];
	mul.f32 	%f37, %f36, %f36;
	sub.f32 	%f5, %f35, %f37;
	setp.eq.f32 	%p3, %f3, 0f00000000;
	setp.le.f32 	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.pred 	%p22, 0;
	@%p5 bra 	LBB7_3;

	neg.f32 	%f38, %f5;
	div.rn.f32 	%f50, %f38, %f4;
	mul.f32 	%f39, %f3, 0fC0800000;
	mul.f32 	%f40, %f39, %f5;
	fma.rn.f32 	%f7, %f4, %f4, %f40;
	setp.neu.f32 	%p7, %f3, 0f00000000;
	setp.lt.f32 	%p8, %f7, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	mov.f32 	%f51, %f50;
	@%p9 bra 	LBB7_3;

	mov.b32 	%r1, %f4;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f41, %f7;
	mov.b32 	%r3, %f41;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f42, %r5;
	add.f32 	%f43, %f4, %f42;
	mul.f32 	%f44, %f43, 0fBF000000;
	div.rn.f32 	%f45, %f44, %f3;
	div.rn.f32 	%f46, %f5, %f44;
	min.f32 	%f47, %f45, %f46;
	max.f32 	%f48, %f45, %f46;
	selp.f32 	%f8, %f50, %f47, %p3;
	selp.f32 	%f51, %f50, %f48, %p3;
	mov.pred 	%p22, -1;
	mov.f32 	%f50, %f8;

LBB7_3:
	setp.lt.f32 	%p12, %f50, %f13;
	selp.f32 	%f12, %f51, %f50, %p12;
	setp.ge.f32 	%p13, %f51, %f13;
	setp.le.f32 	%p14, %f50, %f14;
	and.pred  	%p15, %p14, %p13;
	and.pred  	%p16, %p22, %p15;
	setp.leu.f32 	%p17, %f51, %f14;
	setp.geu.f32 	%p18, %f50, %f13;
	or.pred  	%p19, %p18, %p17;
	and.pred  	%p20, %p19, %p16;
	not.pred 	%p21, %p20;
	@%p21 bra 	LBB7_5;

	mov.u32 	%r7, 254;
	// begin inline asm
	call (%r6), _optix_report_intersection_0, (%f12, %r7);
	// end inline asm

LBB7_5:
	ret;

}
	// .globl	__closesthit__sphere
.visible .entry __closesthit__sphere()
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<202>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<75>;


	// begin inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	@%p1 bra 	LBB8_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32 	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	LBB8_12;

LBB8_2:
	// begin inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd9, [%rd8+8];
	// begin inline asm
	call (%f39), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f40), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f41), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f42), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f43), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f44), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f45), _optix_get_ray_tmax, ();
	// end inline asm
	fma.rn.f32 	%f46, %f45, %f42, %f39;
	fma.rn.f32 	%f47, %f45, %f43, %f40;
	fma.rn.f32 	%f48, %f45, %f44, %f41;
	add.s64 	%rd3, %rd9, 288;
	ld.f32 	%f49, [%rd9+288];
	sub.f32 	%f50, %f46, %f49;
	ld.f32 	%f51, [%rd9+292];
	sub.f32 	%f52, %f47, %f51;
	ld.f32 	%f53, [%rd9+296];
	sub.f32 	%f54, %f48, %f53;
	mul.f32 	%f55, %f50, %f50;
	fma.rn.f32 	%f56, %f52, %f52, %f55;
	fma.rn.f32 	%f57, %f54, %f54, %f56;
	sqrt.rn.f32 	%f58, %f57;
	div.rn.f32 	%f201, %f50, %f58;
	div.rn.f32 	%f200, %f52, %f58;
	div.rn.f32 	%f199, %f54, %f58;
	ld.f32 	%f59, [%rd9+304];
	fma.rn.f32 	%f5, %f59, %f201, %f49;
	fma.rn.f32 	%f6, %f59, %f200, %f51;
	fma.rn.f32 	%f7, %f59, %f199, %f53;
	ld.v4.f32 	{%f60, %f61, %f62, %f63}, [%rd9+208];
	ld.f32 	%f67, [%rd9+160];
	fma.rn.f32 	%f68, %f5, %f67, %f60;
	ld.f32 	%f69, [%rd9+164];
	fma.rn.f32 	%f70, %f5, %f69, %f61;
	ld.f32 	%f71, [%rd9+168];
	fma.rn.f32 	%f72, %f5, %f71, %f62;
	ld.f32 	%f73, [%rd9+176];
	fma.rn.f32 	%f74, %f6, %f73, %f68;
	ld.f32 	%f75, [%rd9+180];
	fma.rn.f32 	%f76, %f6, %f75, %f70;
	ld.f32 	%f77, [%rd9+184];
	fma.rn.f32 	%f78, %f6, %f77, %f72;
	ld.f32 	%f79, [%rd9+192];
	fma.rn.f32 	%f8, %f7, %f79, %f74;
	ld.f32 	%f80, [%rd9+196];
	fma.rn.f32 	%f9, %f7, %f80, %f76;
	ld.f32 	%f81, [%rd9+200];
	fma.rn.f32 	%f10, %f7, %f81, %f78;
	mul.f32 	%f82, %f9, %f9;
	fma.rn.f32 	%f11, %f8, %f8, %f82;
	abs.f32 	%f12, %f8;
	abs.f32 	%f13, %f9;
	setp.eq.f32 	%p2, %f12, 0f00000000;
	setp.eq.f32 	%p3, %f13, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	mov.b32 	%r2, %f8;
	mov.b32 	%r11, %f9;
	and.b32  	%r3, %r11, -2147483648;
	@%p4 bra 	LBB8_6;
	bra.uni 	LBB8_3;

LBB8_6:
	shr.s32 	%r16, %r2, 31;
	and.b32  	%r17, %r16, 1078530011;
	or.b32  	%r18, %r17, %r3;
	mov.b32 	%f189, %r18;
	bra.uni 	LBB8_7;

LBB8_3:
	setp.eq.f32 	%p5, %f12, 0f7F800000;
	setp.eq.f32 	%p6, %f13, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB8_5;
	bra.uni 	LBB8_4;

LBB8_5:
	setp.lt.s32 	%p11, %r2, 0;
	selp.b32 	%r14, 1075235812, 1061752795, %p11;
	or.b32  	%r15, %r14, %r3;
	mov.b32 	%f189, %r15;
	bra.uni 	LBB8_7;

LBB8_4:
	setp.lt.s32 	%p8, %r2, 0;
	min.f32 	%f83, %f13, %f12;
	max.f32 	%f84, %f13, %f12;
	div.rn.f32 	%f85, %f83, %f84;
	mul.rn.f32 	%f86, %f85, %f85;
	mov.f32 	%f87, 0fC0B59883;
	mov.f32 	%f88, 0fBF52C7EA;
	fma.rn.f32 	%f89, %f86, %f88, %f87;
	mov.f32 	%f90, 0fC0D21907;
	fma.rn.f32 	%f91, %f89, %f86, %f90;
	mul.f32 	%f92, %f86, %f91;
	mul.f32 	%f93, %f85, %f92;
	add.f32 	%f94, %f86, 0f41355DC0;
	mov.f32 	%f95, 0f41E6BD60;
	fma.rn.f32 	%f96, %f94, %f86, %f95;
	mov.f32 	%f97, 0f419D92C8;
	fma.rn.f32 	%f98, %f96, %f86, %f97;
	rcp.rn.f32 	%f99, %f98;
	fma.rn.f32 	%f100, %f93, %f99, %f85;
	mov.f32 	%f101, 0f3FC90FDB;
	sub.f32 	%f102, %f101, %f100;
	setp.gt.f32 	%p9, %f13, %f12;
	selp.f32 	%f103, %f102, %f100, %p9;
	mov.f32 	%f104, 0f40490FDB;
	sub.f32 	%f105, %f104, %f103;
	selp.f32 	%f106, %f105, %f103, %p8;
	mov.b32 	%r12, %f106;
	or.b32  	%r13, %r3, %r12;
	mov.b32 	%f107, %r13;
	add.f32 	%f108, %f12, %f13;
	setp.le.f32 	%p10, %f108, 0f7F800000;
	selp.f32 	%f189, %f107, %f108, %p10;

LBB8_7:
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16 	%p12, %rs1, 0;
	@%p12 bra 	LBB8_9;

	neg.f32 	%f110, %f9;
	sqrt.rn.f32 	%f111, %f11;
	rcp.rn.f32 	%f112, %f111;
	mul.f32 	%f113, %f8, %f112;
	mul.f32 	%f114, %f9, %f112;
	mul.f32 	%f115, %f10, %f113;
	mul.f32 	%f116, %f10, %f114;
	neg.f32 	%f117, %f111;
	setp.eq.f32 	%p13, %f111, 0f00000000;
	mov.f32 	%f118, 0f00000000;
	selp.f32 	%f119, 0f3F800000, %f115, %p13;
	selp.f32 	%f120, 0f00000000, %f116, %p13;
	selp.f32 	%f121, 0f00000000, %f117, %p13;
	ld.v4.f32 	{%f122, %f123, %f124, %f125}, [%rd3+-256];
	mul.f32 	%f129, %f122, %f110;
	mul.f32 	%f130, %f123, %f110;
	mul.f32 	%f131, %f124, %f110;
	ld.v4.f32 	{%f132, %f133, %f134, %f135}, [%rd3+-240];
	fma.rn.f32 	%f139, %f8, %f132, %f129;
	fma.rn.f32 	%f140, %f8, %f133, %f130;
	fma.rn.f32 	%f141, %f8, %f134, %f131;
	ld.f32 	%f142, [%rd3+-224];
	fma.rn.f32 	%f143, %f118, %f142, %f139;
	ld.f32 	%f144, [%rd3+-220];
	fma.rn.f32 	%f145, %f118, %f144, %f140;
	ld.f32 	%f146, [%rd3+-216];
	fma.rn.f32 	%f147, %f118, %f146, %f141;
	mul.f32 	%f193, %f143, 0f40C90FDB;
	mul.f32 	%f194, %f145, 0f40C90FDB;
	mul.f32 	%f195, %f147, 0f40C90FDB;
	mul.f32 	%f148, %f119, %f122;
	mul.f32 	%f149, %f119, %f123;
	mul.f32 	%f150, %f119, %f124;
	fma.rn.f32 	%f151, %f120, %f132, %f148;
	fma.rn.f32 	%f152, %f120, %f133, %f149;
	fma.rn.f32 	%f153, %f120, %f134, %f150;
	fma.rn.f32 	%f154, %f121, %f142, %f151;
	fma.rn.f32 	%f155, %f121, %f144, %f152;
	fma.rn.f32 	%f156, %f121, %f146, %f153;
	mul.f32 	%f190, %f154, 0f40490FDB;
	mul.f32 	%f191, %f155, 0f40490FDB;
	mul.f32 	%f192, %f156, 0f40490FDB;
	ld.u8 	%rs3, [%rd3+20];
	setp.eq.s16 	%p14, %rs3, 0;
	neg.f32 	%f157, %f201;
	selp.f32 	%f201, %f201, %f157, %p14;
	neg.f32 	%f158, %f200;
	selp.f32 	%f200, %f200, %f158, %p14;
	neg.f32 	%f159, %f199;
	selp.f32 	%f199, %f199, %f159, %p14;

LBB8_9:
	abs.f32 	%f160, %f10;
	setp.gt.f32 	%p15, %f160, 0f3F11EB85;
	mov.f32 	%f161, 0f3F800000;
	sub.f32 	%f162, %f161, %f160;
	mul.f32 	%f163, %f162, 0f3F000000;
	sqrt.rn.f32 	%f164, %f163;
	selp.f32 	%f165, %f164, %f160, %p15;
	mul.f32 	%f166, %f165, %f165;
	mov.f32 	%f167, 0f3C94D2E9;
	mov.f32 	%f168, 0f3D53F941;
	fma.rn.f32 	%f169, %f168, %f166, %f167;
	mov.f32 	%f170, 0f3D3F841F;
	fma.rn.f32 	%f171, %f169, %f166, %f170;
	mov.f32 	%f172, 0f3D994929;
	fma.rn.f32 	%f173, %f171, %f166, %f172;
	mov.f32 	%f174, 0f3E2AAB94;
	fma.rn.f32 	%f175, %f173, %f166, %f174;
	mul.f32 	%f176, %f166, %f175;
	fma.rn.f32 	%f177, %f176, %f165, %f165;
	add.f32 	%f178, %f177, %f177;
	mov.f32 	%f179, 0f3FC90FDB;
	sub.f32 	%f180, %f179, %f177;
	selp.f32 	%f181, %f178, %f180, %p15;
	ld.u64 	%rd10, [%rd8];
	// begin inline asm
	call (%r19), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.u64 	%rd11, [params+216];
	cvta.to.global.u64 	%rd12, %rd11;
	cvt.u64.u32 	%rd4, %r1;
	mul.wide.u32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u64 	[%rd14], %rd10;
	ld.const.u64 	%rd15, [params+224];
	cvta.to.global.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.u32 	[%rd18], %r19;
	ld.const.u64 	%rd19, [params+80];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd17;
	setp.lt.f32 	%p16, %f189, 0f00000000;
	cvt.f64.f32 	%fd1, %f189;
	add.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64 	%f182, %fd2;
	selp.f32 	%f183, %f182, %f189, %p16;
	cvt.f64.f32 	%fd3, %f183;
	div.rn.f64 	%fd4, %fd3, 0d401921FB54442D18;
	cvt.rn.f32.f64 	%f184, %fd4;
	st.global.f32 	[%rd21], %f184;
	ld.const.u64 	%rd22, [params+88];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd17;
	setp.lt.f32 	%p17, %f10, 0f00000000;
	mov.f32 	%f185, 0f40490FDB;
	sub.f32 	%f186, %f185, %f181;
	selp.f32 	%f187, %f186, %f181, %p17;
	cvt.f64.f32 	%fd5, %f187;
	div.rn.f64 	%fd6, %fd5, 0d400921FB54442D18;
	cvt.rn.f32.f64 	%f188, %fd6;
	st.global.f32 	[%rd24], %f188;
	ld.const.u64 	%rd25, [params+144];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd17;
	st.global.f32 	[%rd27], %f5;
	ld.const.u64 	%rd28, [params+152];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd17;
	st.global.f32 	[%rd30], %f6;
	ld.const.u64 	%rd31, [params+160];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd17;
	st.global.f32 	[%rd33], %f7;
	@%p12 bra 	LBB8_11;

	ld.const.u64 	%rd34, [params+96];
	cvta.to.global.u64 	%rd35, %rd34;
	shl.b64 	%rd36, %rd4, 2;
	add.s64 	%rd37, %rd35, %rd36;
	st.global.f32 	[%rd37], %f201;
	ld.const.u64 	%rd38, [params+104];
	cvta.to.global.u64 	%rd39, %rd38;
	add.s64 	%rd40, %rd39, %rd36;
	st.global.f32 	[%rd40], %f200;
	ld.const.u64 	%rd41, [params+112];
	cvta.to.global.u64 	%rd42, %rd41;
	add.s64 	%rd43, %rd42, %rd36;
	st.global.f32 	[%rd43], %f199;
	ld.const.u64 	%rd44, [params+120];
	cvta.to.global.u64 	%rd45, %rd44;
	add.s64 	%rd46, %rd45, %rd36;
	st.global.f32 	[%rd46], %f201;
	ld.const.u64 	%rd47, [params+128];
	cvta.to.global.u64 	%rd48, %rd47;
	add.s64 	%rd49, %rd48, %rd36;
	st.global.f32 	[%rd49], %f200;
	ld.const.u64 	%rd50, [params+136];
	cvta.to.global.u64 	%rd51, %rd50;
	add.s64 	%rd52, %rd51, %rd36;
	st.global.f32 	[%rd52], %f199;
	ld.const.u64 	%rd53, [params+168];
	cvta.to.global.u64 	%rd54, %rd53;
	add.s64 	%rd55, %rd54, %rd36;
	st.global.f32 	[%rd55], %f193;
	ld.const.u64 	%rd56, [params+176];
	cvta.to.global.u64 	%rd57, %rd56;
	add.s64 	%rd58, %rd57, %rd36;
	st.global.f32 	[%rd58], %f194;
	ld.const.u64 	%rd59, [params+184];
	cvta.to.global.u64 	%rd60, %rd59;
	add.s64 	%rd61, %rd60, %rd36;
	st.global.f32 	[%rd61], %f195;
	ld.const.u64 	%rd62, [params+192];
	cvta.to.global.u64 	%rd63, %rd62;
	add.s64 	%rd64, %rd63, %rd36;
	st.global.f32 	[%rd64], %f190;
	ld.const.u64 	%rd65, [params+200];
	cvta.to.global.u64 	%rd66, %rd65;
	add.s64 	%rd67, %rd66, %rd36;
	st.global.f32 	[%rd67], %f191;
	ld.const.u64 	%rd68, [params+208];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd70, %rd69, %rd36;
	st.global.f32 	[%rd70], %f192;

LBB8_11:
	ld.const.u64 	%rd71, [params+72];
	cvta.to.global.u64 	%rd72, %rd71;
	shl.b64 	%rd73, %rd4, 2;
	add.s64 	%rd74, %rd72, %rd73;
	st.global.f32 	[%rd74], %f45;

LBB8_12:
	ret;

}
	// .globl	__raygen__rg
.visible .entry __raygen__rg()
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<28>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<44>;


	// begin inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd3, [params+8];
	cvta.to.global.u64 	%rd4, %rd3;
	cvt.u64.u32 	%rd1, %r8;
	mul.wide.u32 	%rd5, %r8, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.const.u64 	%rd7, [params+16];
	cvta.to.global.u64 	%rd8, %rd7;
	add.s64 	%rd9, %rd8, %rd5;
	ld.global.f32 	%f2, [%rd9];
	ld.const.u64 	%rd10, [params+24];
	cvta.to.global.u64 	%rd11, %rd10;
	add.s64 	%rd12, %rd11, %rd5;
	ld.global.f32 	%f3, [%rd12];
	ld.const.u64 	%rd13, [params+32];
	cvta.to.global.u64 	%rd14, %rd13;
	add.s64 	%rd15, %rd14, %rd5;
	ld.global.f32 	%f4, [%rd15];
	ld.const.u64 	%rd16, [params+40];
	cvta.to.global.u64 	%rd17, %rd16;
	add.s64 	%rd18, %rd17, %rd5;
	ld.global.f32 	%f5, [%rd18];
	ld.const.u64 	%rd19, [params+48];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd5;
	ld.global.f32 	%f6, [%rd21];
	ld.const.u64 	%rd22, [params+56];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.f32 	%f7, [%rd24];
	ld.const.u64 	%rd25, [params+64];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd5;
	ld.global.f32 	%f9, [%rd27];
	setp.eq.f32 	%p1, %f9, 0f7F800000;
	selp.f32 	%f8, 0f7F7FFFFF, %f9, %p1;
	ld.const.u64 	%rd2, [params+232];
	setp.eq.s64 	%p2, %rd2, 0;
	ld.const.u64 	%rd28, [params];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd1;
	ld.global.u8 	%rs1, [%rd30];
	@%p2 bra 	LBB9_4;

	setp.eq.s16 	%p3, %rs1, 0;
	@%p3 bra 	LBB9_3;

	ld.const.u64 	%rd31, [params+240];
	mov.f32 	%f18, 0f00000000;
	mov.u32 	%r10, 4;
	mov.u32 	%r12, 1;
	mov.u32 	%r13, 0;
	// begin inline asm
	call _optix_trace_0, (%rd31, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f18, %r12, %r10, %r13, %r12, %r13);
	// end inline asm
	bra.uni 	LBB9_7;

LBB9_4:
	setp.eq.s16 	%p4, %rs1, 0;
	@%p4 bra 	LBB9_6;

	ld.const.u64 	%rd34, [params+240];
	mov.f32 	%f27, 0f00000000;
	mov.u32 	%r17, 1;
	mov.u32 	%r18, 0;
	// begin inline asm
	call _optix_trace_0, (%rd34, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f27, %r17, %r18, %r18, %r17, %r18);
	// end inline asm
	bra.uni 	LBB9_7;

LBB9_3:
	cvta.to.global.u64 	%rd32, %rd2;
	add.s64 	%rd33, %rd32, %rd1;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd33], %rs3;
	bra.uni 	LBB9_7;

LBB9_6:
	mov.u64 	%rd35, 0;
	ld.const.u64 	%rd36, [params+216];
	cvta.to.global.u64 	%rd37, %rd36;
	shl.b64 	%rd38, %rd1, 3;
	add.s64 	%rd39, %rd37, %rd38;
	st.global.u64 	[%rd39], %rd35;
	ld.const.u64 	%rd40, [params+72];
	cvta.to.global.u64 	%rd41, %rd40;
	shl.b64 	%rd42, %rd1, 2;
	add.s64 	%rd43, %rd41, %rd42;
	mov.u32 	%r19, 2139095040;
	st.global.u32 	[%rd43], %r19;

LBB9_7:
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<14>;


	// begin inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// end inline asm
	// begin inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// end inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64 	%p1, %rd1, 0;
	cvt.u64.u32 	%rd2, %r8;
	@%p1 bra 	LBB10_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s64 	%rd4, %rd3, %rd2;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd4], %rs1;
	bra.uni 	LBB10_3;

LBB10_2:
	mov.u64 	%rd5, 0;
	ld.const.u64 	%rd6, [params+216];
	cvta.to.global.u64 	%rd7, %rd6;
	shl.b64 	%rd8, %rd2, 3;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd5;
	ld.const.u64 	%rd10, [params+72];
	cvta.to.global.u64 	%rd11, %rd10;
	shl.b64 	%rd12, %rd2, 2;
	add.s64 	%rd13, %rd11, %rd12;
	mov.u32 	%r9, 2139095040;
	st.global.u32 	[%rd13], %r9;

LBB10_3:
	ret;

}
	// .globl	__exception__err
.visible .entry __exception__err()
{
	.local .align 16 .b8 	__local_depot11[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	// begin inline asm
	call (%r1), _optix_get_exception_code, ();
	// end inline asm
	mul.wide.s32 	%rd1, %r1, 16;
	mov.u64 	%rd2, exceptions;
	add.s64 	%rd3, %rd2, %rd1;
	ld.const.u64 	%rd4, [%rd3+8];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	st.local.u32 	[%rd6], %r1;
	st.local.u64 	[%rd6+8], %rd4;
	mov.u64 	%rd7, $str$6;
	cvta.global.u64 	%rd8, %rd7;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r2, [retval0+0];
	} // callseq 0
	ret;

}

